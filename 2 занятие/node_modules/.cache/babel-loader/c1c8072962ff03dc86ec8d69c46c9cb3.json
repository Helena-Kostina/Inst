{"ast":null,"code":"var _jsxFileName = \"/home/lena/Documents/Instagram~/instagram/src/components/Posts.js\";\nimport React, { Component } from \"react\";\nimport InstaService from \"../services/instaService\"; //с большой буквы так как это класс\n//30 мин\n// поля классов\n\nexport default class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.InstaService = new InstaService();\n    this.state = {\n      posts: [],\n      error: false\n    };\n\n    this.onPostsLoaded = posts => {\n      this.setState({\n        posts,\n        // posts: posts , по стандврту es6\n        error: false\n      });\n      console.log(this.state.posts);\n    };\n\n    this.onError = error => {\n      this.setState({\n        error: true\n      });\n    };\n  }\n\n  //хуки Жизненного цикла: создается, обновлется, умирает, ошибка\n  //создался, появился\n  componentDidMount() {\n    this.updatePosts();\n  } //подгрузить посты\n\n\n  updatePosts() {\n    this.InstaService.getAllPosts().then(this.onPostsLoaded).catch(this.onError);\n  }\n\n  renderItems(arr) {\n    return arr.map(item => {\n      const name = item.name,\n            altname = item.altname,\n            photo = item.photo,\n            src = item.src,\n            alt = item.alt,\n            descr = item.descr,\n            id = item.id;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/lena/Documents/Instagram~/instagram/src/components/Posts.js"],"names":["React","Component","InstaService","Posts","state","posts","error","onPostsLoaded","setState","console","log","onError","componentDidMount","updatePosts","getAllPosts","then","catch","renderItems","arr","map","item","name","altname","photo","src","alt","descr","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAAqD;AAErD;AACA;;AACA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,YAD2C,GAC5B,IAAIA,YAAJ,EAD4B;AAAA,SAE3CE,KAF2C,GAEnC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KAFmC;;AAAA,SAmB3CC,aAnB2C,GAmB3BF,KAAK,IAAI;AACvB,WAAKG,QAAL,CAAc;AACZH,QAAAA,KADY;AACL;AACPC,QAAAA,KAAK,EAAE;AAFK,OAAd;AAKAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD,KA1B0C;;AAAA,SA4B3CM,OA5B2C,GA4BjCL,KAAK,IAAI;AACjB,WAAKE,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KAhC0C;AAAA;;AAO3C;AACA;AACAM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL;AACD,GAX0C,CAY3C;;;AACAA,EAAAA,WAAW,GAAG;AACZ,SAAKX,YAAL,CAAkBY,WAAlB,GACGC,IADH,CACQ,KAAKR,aADb,EAEGS,KAFH,CAES,KAAKL,OAFd;AAGD;;AAiBDM,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,WAAOA,GAAG,CAACC,GAAJ,CAAQC,IAAI,IAAI;AAAA,YACbC,IADa,GACiCD,IADjC,CACbC,IADa;AAAA,YACPC,OADO,GACiCF,IADjC,CACPE,OADO;AAAA,YACEC,KADF,GACiCH,IADjC,CACEG,KADF;AAAA,YACSC,GADT,GACiCJ,IADjC,CACSI,GADT;AAAA,YACcC,GADd,GACiCL,IADjC,CACcK,GADd;AAAA,YACmBC,KADnB,GACiCN,IADjC,CACmBM,KADnB;AAAA,YAC0BC,EAD1B,GACiCP,IADjC,CAC0BO,EAD1B;AAGtB,KAHM,CAAP;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAjD0C","sourcesContent":["import React, { Component } from \"react\";\nimport InstaService from \"../services/instaService\"; //с большой буквы так как это класс\n\n//30 мин\n// поля классов\nexport default class Posts extends Component {\n  InstaService = new InstaService();\n  state = {\n    posts: [],\n    error: false\n  };\n\n  //хуки Жизненного цикла: создается, обновлется, умирает, ошибка\n  //создался, появился\n  componentDidMount() {\n    this.updatePosts();\n  }\n  //подгрузить посты\n  updatePosts() {\n    this.InstaService.getAllPosts()\n      .then(this.onPostsLoaded)\n      .catch(this.onError);\n  }\n\n  onPostsLoaded = posts => {\n    this.setState({\n      posts, // posts: posts , по стандврту es6\n      error: false\n    });\n\n    console.log(this.state.posts);\n  };\n\n  onError = error => {\n    this.setState({\n      error: true\n    });\n  };\n\n  renderItems(arr) {\n    return arr.map(item => {\n      const { name, altname, photo, src, alt, descr, id } = item;\n      \n    });\n  }\n\n  render() {\n    return (\n      <div className=\"left\">\n        {/* поля класов , чтобы раньше написсать класс нужно использовать слов\n        class, метод super */}\n        {/* пропсы не изменяемы, а стайты динамически изменяемы */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}