{"ast":null,"code":"var _jsxFileName = \"/home/lena/Documents/Instagram~/instagram/src/components/Posts.js\";\nimport React, { Component } from \"react\";\nimport InstaService from \"../services/instaService\"; //с большой буквы так как это класс\n\nimport User from \"./User\";\nimport ErrorMessage from './Error'; // поля классов\n\nexport default class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.InstaService = new InstaService();\n    this.state = {\n      posts: [],\n      error: false\n    };\n\n    this.onPostsLoaded = posts => {\n      this.setState({\n        posts,\n        // posts: posts , по стандврту es6\n        error: false\n      });\n      console.log(this.state.posts);\n    };\n\n    this.onError = error => {\n      this.setState({\n        error: true\n      });\n    };\n  }\n\n  //хуки Жизненного цикла: создается, обновлется, умирает, ошибка\n  //создался, появился\n  componentDidMount() {\n    this.updatePosts();\n  } //подгрузить посты\n\n\n  updatePosts() {\n    this.InstaService.getAllPosts().then(this.onPostsLoaded).catch(this.onError);\n  }\n\n  renderItems(arr) {\n    return arr.map(item => {\n      const name = item.name,\n            altname = item.altname,\n            photo = item.photo,\n            src = item.src,\n            alt = item.alt,\n            descr = item.descr,\n            id = item.id;\n      return React.createElement(\"div\", {\n        key: id,\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(User, {\n        src: photo,\n        alt: altname,\n        name: name,\n        min: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: src,\n        alt: alt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"post__name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        className: \"post__descr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, descr));\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          posts = _this$state.posts;\n\n    if (error) {\n      return;\n    }\n\n    const items = this.renderItems(posts);\n    return React.createElement(\"div\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, items);\n  }\n\n}","map":{"version":3,"sources":["/home/lena/Documents/Instagram~/instagram/src/components/Posts.js"],"names":["React","Component","InstaService","User","ErrorMessage","Posts","state","posts","error","onPostsLoaded","setState","console","log","onError","componentDidMount","updatePosts","getAllPosts","then","catch","renderItems","arr","map","item","name","altname","photo","src","alt","descr","id","render","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAAqD;;AACrD,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,SAAzB,C,CAEA;;AACA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CC,YAD2C,GAC5B,IAAIA,YAAJ,EAD4B;AAAA,SAE3CI,KAF2C,GAEnC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KAFmC;;AAAA,SAmB3CC,aAnB2C,GAmB3BF,KAAK,IAAI;AACvB,WAAKG,QAAL,CAAc;AACZH,QAAAA,KADY;AACL;AACPC,QAAAA,KAAK,EAAE;AAFK,OAAd;AAKAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD,KA1B0C;;AAAA,SA4B3CM,OA5B2C,GA4BjCL,KAAK,IAAI;AACjB,WAAKE,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KAhC0C;AAAA;;AAO3C;AACA;AACAM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL;AACD,GAX0C,CAY3C;;;AACAA,EAAAA,WAAW,GAAG;AACZ,SAAKb,YAAL,CAAkBc,WAAlB,GACGC,IADH,CACQ,KAAKR,aADb,EAEGS,KAFH,CAES,KAAKL,OAFd;AAGD;;AAiBDM,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,WAAOA,GAAG,CAACC,GAAJ,CAAQC,IAAI,IAAI;AAAA,YACbC,IADa,GACiCD,IADjC,CACbC,IADa;AAAA,YACPC,OADO,GACiCF,IADjC,CACPE,OADO;AAAA,YACEC,KADF,GACiCH,IADjC,CACEG,KADF;AAAA,YACSC,GADT,GACiCJ,IADjC,CACSI,GADT;AAAA,YACcC,GADd,GACiCL,IADjC,CACcK,GADd;AAAA,YACmBC,KADnB,GACiCN,IADjC,CACmBM,KADnB;AAAA,YAC0BC,EAD1B,GACiCP,IADjC,CAC0BO,EAD1B;AAGrB,aACE;AAAK,QAAA,GAAG,EAAEA,EAAV;AAAc,QAAA,SAAS,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEJ,KAAX;AAAkB,QAAA,GAAG,EAAED,OAAvB;AAAgC,QAAA,IAAI,EAAED,IAAtC;AAA4C,QAAA,GAAG,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,GAAG,EAAEG,GAAV;AAAe,QAAA,GAAG,EAAEC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BJ,IAA7B,CAHF,EAIE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BK,KAA9B,CAJF,CADF;AAQD,KAXM,CAAP;AAYD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKxB,KADvB;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQD,KADR,eACQA,KADR;;AAGX,QAAGC,KAAH,EAAS;AACP;AACD;;AAEG,UAAMuB,KAAK,GAAG,KAAKZ,WAAL,CAAiBZ,KAAjB,CAAd;AACA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGwB,KAJH,CADF;AAQD;;AAjE0C","sourcesContent":["import React, { Component } from \"react\";\nimport InstaService from \"../services/instaService\"; //с большой буквы так как это класс\nimport User from \"./User\";\nimport ErrorMessage from './Error'\n\n// поля классов\nexport default class Posts extends Component {\n  InstaService = new InstaService();\n  state = {\n    posts: [],\n    error: false\n  };\n\n  //хуки Жизненного цикла: создается, обновлется, умирает, ошибка\n  //создался, появился\n  componentDidMount() {\n    this.updatePosts();\n  }\n  //подгрузить посты\n  updatePosts() {\n    this.InstaService.getAllPosts()\n      .then(this.onPostsLoaded)\n      .catch(this.onError);\n  }\n\n  onPostsLoaded = posts => {\n    this.setState({\n      posts, // posts: posts , по стандврту es6\n      error: false\n    });\n\n    console.log(this.state.posts);\n  };\n\n  onError = error => {\n    this.setState({\n      error: true\n    });\n  };\n\n  renderItems(arr) {\n    return arr.map(item => {\n      const { name, altname, photo, src, alt, descr, id } = item;\n\n      return (\n        <div key={id} className=\"post\">\n          <User src={photo} alt={altname} name={name} min={true} />\n          <img src={src} alt={alt}></img>\n          <div className=\"post__name\">{name}</div>\n          <div className=\"post__descr\">{descr}</div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { error, posts } = this.state;\n\nif(error){\n  return \n}\n\n    const items = this.renderItems(posts);\n    return (\n      <div className=\"left\">\n        {/* поля класов , чтобы раньше написсать класс нужно использовать слов\n        class, метод super */}\n        {/* пропсы не изменяемы, а стайты динамически изменяемы */}\n        {items}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}